#!/usr/bin/env python3
"""
Injects JS file paths and names into HTML templates.

For each .js file in mixed/js/, this script:
- Reads mixed/index.modified.html
- Replaces 'LIBRARY' with the relative path to the .js file (e.g., js/foo/bar.js)
- Replaces 'LIBKEY' with the .js file name (e.g., bar.js)
- Writes the result to mixed/html/<js_filename>.html

The original index.modified.html is never modified.
"""

import os
from typing import NoReturn


def main() -> NoReturn:
    label_to_replace = "LIBRARY"
    label_2_to_replace = "LIBKEY"
    input_file = "placeholder/base.html"
    js_dir = "../mixed/js"
    output_dir = "../mixed/html"

    # Ensure output directory exists
    os.makedirs(output_dir, exist_ok=True)

    # Walk through js_dir and process all .js files
    for root, _, files in os.walk(js_dir):
        for file in files:
            if file.endswith(".js"):
                js_path = os.path.join(root, file)
                js_name = os.path.basename(js_path)
                # Read the HTML template
                with open(input_file, "r", encoding="utf-8") as f:
                    html_content = f.read()
                # Replace placeholders
                html_content = html_content.replace(
                    label_to_replace, js_name
                )  # Only the file name
                html_content = html_content.replace(label_2_to_replace, js_name)
                # Output HTML file name
                output_html = os.path.join(
                    output_dir, f"{os.path.splitext(js_name)[0]}.html"
                )
                with open(output_html, "w", encoding="utf-8") as f:
                    f.write(html_content)


if __name__ == "__main__":
    main()
