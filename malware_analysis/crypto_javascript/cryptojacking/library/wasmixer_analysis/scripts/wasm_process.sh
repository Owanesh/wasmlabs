#!/usr/bin/env bash
# Merged wasm processing automation: runs binex and wasm2wat on a list of wasm files
# Produces text/wat outputs and a combined report

set -euo pipefail

ROOT_DIR="$(cd "$(dirname "$0")" && pwd)"
BINEX_PY="$ROOT_DIR/../../../../tools/binex/binex.py"

# allow overriding tools via env
WASM2WAT_CMD="${WASM2WAT_CMD:-wasm2wat}"
PY_CMD="${PY_CMD:-python3}"


# output layout: use the sibling `composed` directory for inputs/outputs
COMPOSED_DIR="$(cd "$ROOT_DIR/../composed" 2>/dev/null && pwd || echo "$ROOT_DIR/../composed")"
OUT_DIR="$COMPOSED_DIR"
REPORT_FILE="$OUT_DIR/report.txt"

mkdir -p "$OUT_DIR" "$OUT_DIR/txt" "$OUT_DIR/wat" "$OUT_DIR/wasm"

echo "WASM processing report" > "$REPORT_FILE"
echo "Generated: $(date -u)" >> "$REPORT_FILE"
echo >> "$REPORT_FILE"

process_one() {
  local wasmfile="$1"
  local base
  base="$(basename "$wasmfile" .wasm)"
  local txt_out="$OUT_DIR/txt/${base}.txt"
  local wat_out="$OUT_DIR/wat/${base}.wat"

  echo "Processing: $wasmfile" | tee -a "$REPORT_FILE"

  if [ -x "$BINEX_PY" ] || [ -f "$BINEX_PY" ]; then
    echo "  Running binex -> $txt_out" | tee -a "$REPORT_FILE"
    "$PY_CMD" "$BINEX_PY" "$wasmfile" "$txt_out" 2>> "$OUT_DIR/errors.log" || echo "    binex failed for $wasmfile" | tee -a "$REPORT_FILE"
  else
    echo "  binex not found at $BINEX_PY; skipping" | tee -a "$REPORT_FILE"
  fi

  echo "  running wasm2wat -> $wat_out" | tee -a "$REPORT_FILE"
  "$WASM2WAT_CMD" "$wasmfile" -o "$wat_out" 2>> "$OUT_DIR/errors.log" || echo "    wasm2wat failed for $wasmfile" | tee -a "$REPORT_FILE"

  # small summary: sizes
  local size_wasm size_txt size_wat
  size_wasm=$(stat -f%z "$wasmfile" 2>/dev/null || stat -c%s "$wasmfile" 2>/dev/null || echo "?" )
  size_txt=$(stat -f%z "$txt_out" 2>/dev/null || stat -c%s "$txt_out" 2>/dev/null || echo "-")
  size_wat=$(stat -f%z "$wat_out" 2>/dev/null || stat -c%s "$wat_out" 2>/dev/null || echo "-")

  echo "  sizes (bytes): wasm=$size_wasm  txt=$size_txt  wat=$size_wat" | tee -a "$REPORT_FILE"
  echo >> "$REPORT_FILE"
}

main() {
  if [ "$#" -ge 1 ]; then
    files=("$@")
  else
  # default: take .wasm files from composed/wasm/ sibling to this script
  shopt -s nullglob
  files=( "$COMPOSED_DIR/wasm"/*.wasm )
    # fallback: also check current folder
    if [ ${#files[@]} -eq 0 ]; then
      files=( ./*.wasm )
    fi
  fi

  if [ ${#files[@]} -eq 0 ]; then
    echo "No .wasm files found. Pass files as arguments or place .wasm files in the same folder." | tee -a "$REPORT_FILE"
    exit 1
  fi

  for f in "${files[@]}"; do
    [ -f "$f" ] || continue
    process_one "$f"
  done

  echo "Finished processing ${#files[@]} wasm file(s)." | tee -a "$REPORT_FILE"
  echo "Output directory: $OUT_DIR" | tee -a "$REPORT_FILE"
}

main "$@"
