# -------------------------------
# Dependencies
# -------------------------------

- name: Install dependencies on Debian/Ubuntu
  apt:
    name:
      - git
      - python3
      - python3-pip
      - cmake
      - build-essential
    state: present
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Install dependencies and Emscripten on macOS
  community.general.homebrew:
    name:
      - git
      - python
      - cmake
      - emscripten
    state: present
  become: false  
  when: ansible_facts['os_family'] == "Darwin"
  
- name: Create Emscripten cache directory in user home
  become: false
  file:
    path: "{{ lookup('env', 'HOME') }}/.emscripten_cache"
    state: directory
    mode: '0755'
  when: ansible_facts['os_family'] == "Darwin"

- name: Set EM_CACHE in .zshrc in user home
  become: false
  lineinfile:
    path: "{{ lookup('env', 'HOME') }}/.zshrc"
    line: 'export EM_CACHE="$HOME/.emscripten_cache"'
    create: yes
    insertafter: EOF
  when: ansible_facts['os_family'] == "Darwin"


# -------------------------------
# Emscripten install (Linux only)
# -------------------------------

- name: Clone emsdk repository
  git:
    repo: "{{ emsdk_git_url }}"
    dest: "{{ emsdk_dir }}"
    version: "{{ emsdk_branch }}"
    update: yes
  when: ansible_facts['os_family'] != "Darwin"

- name: Install Emscripten SDK and Binaryen
  shell: |
    ./emsdk install latest
    ./emsdk activate latest
  args:
    chdir: "{{ emsdk_dir }}"
    executable: /bin/bash
    creates: "{{ emsdk_dir }}/upstream/emscripten"
  environment:
    PATH: "{{ lookup('env', 'PATH') }}"
  when: ansible_facts['os_family'] != "Darwin"

# -------------------------------
# Environment Setup
# -------------------------------

- name: Add emsdk to shell profile (Linux)
  lineinfile:
    path: /etc/profile.d/emsdk.sh
    create: yes
    line: 'source {{ emsdk_dir }}/emsdk_env.sh'
    mode: '0755'
  when: ansible_facts['os_family'] != "Darwin"

# -------------------------------
# Verification
# -------------------------------

- name: Test that emcc is available
  shell: |
    which emcc && emcc --version
  args:
    executable: /bin/bash
